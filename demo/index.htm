<!DOCTYPE html>
<html>
	<head>
		<meta charset="utf-8">
		<title>Dominar demo</title>
		<link href="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.4/css/bootstrap.min.css" rel="stylesheet">
		<script src="https://code.jquery.com/jquery-1.11.3.min.js"></script>
		<script src="../node_modules/validatorjs/dist/validator.js"></script>
		<script src="../src/dominar.js"></script>
		<style type="text/css">
			.form-control-feedback {
    			pointer-events: auto;
    			cursor: pointer;
			}

			td.has-feedback .form-control-feedback {
				top: 9px;
				right: 7px;
			}
		</style>
	</head>
	<body>
		<div class="container">

			<h1>Dominar</h1>

			<form>
				<h3>Basic field tests</h3>

				<div class="form-group">
					<label class="control-label">Username</label>
					<input name="username" type="text" class="form-control"/>
				</div>

				<div class="form-group">
					<label class="control-label">Notes</label>
					<textarea name="notes" class="form-control"></textarea>
				</div>

				<div class="form-group">
					<label class="control-label">Group</label>
					<select name="group" class="form-control">
						<option value="">Select a group</option>
						<option value="admin">Guest</option>
						<option value="admin">Admin</option>
					</select>
				</div>

				<div class="form-group">
					<label class="control-label">Custom validation (must be uppercase)</label>
					<input name="uppercase" type="text" class="form-control"/>
				</div>

				<div class="form-group">
					<span class="help-block"></span>
					<label class="control-label">Custom error message position</label>
					<input name="error_ontop" class="form-control"/>
				</div>

				<br/>

				<h3>Array validation</h3>
				<table class="table table-bordered">
					<thead>
						<tr>
							<th>Friend Name</th>
							<th>Notes</th>
						</tr>
					</thead>
					<tbody>
						<tr>
							<td><input name="friends[0][name]" type="text" class="form-control friend-name"/>
							<td><input name="friends[0][notes]" type="text" class="form-control friend-notes"/>
						</td>
						<tr>
							<td><input name="friends[1][name]" type="text" class="form-control friend-name"/>
							<td><input name="friends[1][notes]" type="text" class="form-control friend-notes"/>
						</td>
					</tbody>
				</table>

				<br/>

				<h3>Remove error on click of icon</h3>
				<div class="form-group">
					<input name="remove_icon_test" type="text" class="form-control" placeholder="Enter something and click the error icon..."/>
				</div>

				<br/>

				<h3>Asynchronous rule <code>remoteRule</code></h3>
				<div class="form-group">
					<label class="control-label">Username available? ['admin' is not available]</label>
					<input name="username_async" type="text" class="form-control" placeholder="Enter a username and wait..."/>
				</div>

				<button type="submit" class="btn btn-primary">Submit</button>
			</form>
		</div>

		<script>

			Dominar.register('uppercase', function(value) {
				return value.toUpperCase() === value;
			}, 'The :attribute must only be uppercase.');

			var $form = $('form');

			$form.on('dominar.initField', function(event, field) {
				if (field.getName() == 'remove_icon_test')
				{
					field.$feedback.on('click', function() {
						// Only remove if field is invalid:
						field.validate($.noop, function() {
							field.reset();
						});
					});
				}
			});

			var validator = new Dominar($form, {
				username: {
					rules: 'required|min:3|max:10'
				},
				notes: {
					rules: 'required|min:5|max:20'
				},
				group: {
					rules: 'required|in:guest,admin'
				},
				uppercase: {
					rules: 'required|uppercase'
				},
				error_ontop: {
					rules: 'required|min:99999'
				},
				remove_icon_test: {
					rules: 'required|min:99999',
					triggers: ['keyup'],
					delay: false
				},
				username_async: {
					rules: 'required|min:1',
					remoteRule: function(desiredUsername) {
						// Simulate ajax request
						var dfd = $.Deferred();
						setTimeout(function() {
							// (Your server would do the validation)
							if (desiredUsername == 'admin')
							{
								return dfd.reject('You cannot have the username admin.');
							}
							return dfd.resolve();
						}, 1000);
						return dfd;
					}
				}
			});

			validator
				.add($('.friend-name'), {
					rules: 'required|min:3|max:10',
					container: 'td'
				})
				.add($('.friend-notes'), {
					rules: 'required|min:10|max:30',
					container: 'td'
				});
		</script>
	</body>
</html>